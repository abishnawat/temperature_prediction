library(rJava)
library(RWeka)
system("java -version")
q()
system("java -version")
library(rJava)
q()
weather<-read.csv("C:/Users/DELL/Desktop/minor project/rdu-weather-history_modified1.csv")
summary(weather)
library(VGAM)
str(weather)
lm(temperaturemin ~ year+month+day, data="weather")
lm(temperaturemin ~ year + month + day, data= weather)
wmodel <- lm(temperaturemin ~ year + month + day, data=weather)
summary(wmodel)
hist(year$temperaturemin)
hist(weather$temperaturemin)
install.packages(rpart)
install.packages("rpart")
library(rpart)
w<-rpart(temperaturemin ~ day + month + year, data=weather)
w
summary(m)
summary(w)
cor(w, weather$temperaturemin)
rpart.plot(w, digits=3)
library(rpart.plot)
w_train<- weather[1:2653, ]
w_test<- weather[2654:3653, ]
w<-rpart(temperaturemin ~ day + month + year, data = weather)
p<- predict(w, w_test)
cor(p,w_test$temperaturemin)
summary(p)
summary(w_test$temperaturemin)
lw<-lm(temperaturemin ~ day + month + year, data = w_train)
p<- predict(lw, w_test)
cor(p, w_test$temperaturemin)
w<-rpart(temperaturemin ~ day + month + year, data = w_train)
p<- predict(lw, w_test)
cor(p, w_test$temperaturemin)
p<-predict(w, w_test)
cor(p, w_test$temperaturemin)
p
mean_abserror(p, w_test$temperaturemin)
MAE <- function(actual, predicted) {
mean(abs(actual - predicted))
}
MAE(p, w_test$temperaturemin)
lp<-predict(lw, w_test)
MAE(lp, w_test$temperaturemin)
q()
weather<-read.csv("C:/Users/DELL/Desktop/minor project/rdu-weather-history_modified1.csv")
str(weather)
hist(weather$temperaturemin)
w_train<-weather[1:2654, ]
w_test<-weather[2655:3654, ]
w_model<-lm(temperaturemin~day+month+year, data=w_train)
w_model
summary(w_model)
p<-predict(w_model, w_test)
summary(p)
summary(weather$temperaturemin)
cor(p, weather$temperaturemin)
cor(p, w_test$temperaturemin)
save.image("C:\\Users\\DELL\\Desktop\\minor project\\lm.RData")
q()
weather <- read.csv("C:/Users/DELL/Desktop/minor project/rdu-weather-history_modified1.csv")
hist(weather$temperature_min)
hist(weather$temperaturemin)
w_train <- weather[1:2654, ]
w_test <- weather[2655:3654, ]
library(rpart)
m <- rpart(temperaturemin~day+month+year, data = w_train)
m
summary(m)
p <- predict(m, w_test)
summary(p)
summary(weather$temperaturemin)
cor(p, weather$temperaturemin)
cor(p, w_test$temperaturemin)
MAE<-function(actual, predicted){mean(abs(actual-predicted))}
MAE(p, w_test$temperaturemin)
summary(w_test$temperaturemin)
w_test <- weather[2655:3652]
w_test <- weather[2655: 3652, ]
summary(w_test$temperaturemin)
p<-predict(m, w_test)
cor(p, w_test$temperaturemin)
MAE(p, w_test$temperaturemin)
MSE.r <- sum((p-w_test$temperaturemin)^2)/nrow(w_test) 
MSE.r
install.packages("Metrics")
library(Metrics)
mse(w_test$temperaturemin, p)
save.image("C:\\Users\\DELL\\Desktop\\minor project\\regression_tree.RData")
q()
library(neuralnet)
weather <- read.csv("C:/Users/DELL/Desktop/minor project/rdu-weather-history_modified1.csv")
set.seed(500)
index <- sample(1: nrow(weather), round(0.75*nrow(weather)))
maxs <- apply(data, 2, max)
maxs <- apply(weather, 2, max)
mins<- apply(weather, 2, min)
scaled<-as.data.frame(scale(weather, center=mins, scale = maxs-mins))
train_<-scaled[index,]
test_<-scaled[-index, ]
n<-names(train_)
nn<-neuralnet(temperaturemin~day+month+year, data=train_, hidden=(5,3), linear.output=T)
nn<-neuralnet(temperaturemin~day+month+year, data=train_, hidden=c(5,3), linear.output=T)
nn<-neuralnet(temperaturemin~day+month+year, data=train_, hidden=c(5,3), linear.output=T, stepmax=1e6)
plot(nn)
q()
pr.nn<-compute(nn, test_[,1:3])
pr.nn_<-pr.nn$net.result*(max(weather$temperaturemin)-min(weather$temperaturemin))+min(weather$temperaturemin)
test.r<-(test_$temperaturemin)*(max(weather$temperaturemin)-min(weather$temperaturemin))+min(weather$temperaturemin)
MSE.nn<- sum((test.r - pr.nn)^2)/nrow(test_)
MSE.nn<- sum((test.r - pr.nn_)^2)/nrow(test_)
MSE.nn
plot(nn)
cal_temp<-pr.nn$net.result
cor(cal_temp, weather$temperaturemin)
cor(cal_temp, test_$temperaturemin)
mse1<- sum((test_$temperaturemin - cal_teemp)^2)/nrow(test_)
mse1<- sum((test_$temperaturemin - cal_temp)^2)/nrow(test_)
mse1
cor(pr.nn_, test.r)
pr.nn_[1:10,]
test.r[1:10, ]
summary(pr.nn_)
summary(test.r)
test.r[1:10,]
test.r
pr.nn_
pr.nn$net.result
test_$temperaturemin
q()
weather<- read.csv("C:/Users/DELL/Desktop/minor project/datasets/data3.csv")
summary(weather)
q()
weather<- read.csv("C:/Users/DELL/Desktop/minor project/datasets/data4.csv")
smp_size <- floor(0.60*nrow(weather))
set.seed(500)
index <- sample(seq_len(nrow(weather)), size=smp_size)
wtrain <- weather[index, ]
wtest <- weather[-index, ]
library(rpart)
m<-rpart(result ~y1+y2+y3+y4+y5, data=wtrain)
plm <- predict(m, wtest)
library(Metrics)
mse(wtest$result, plm)
cor(wtest$result, plm)
mae(plm, wtest$result)
save.image("C:\\Users\\DELL\\Desktop\\minor project\\implementaions\\rtree\\data4_rpart_1.RData")
